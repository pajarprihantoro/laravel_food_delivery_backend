{
	"info": {
		"_postman_id": "339b1d8b-53ee-4c0f-a734-7bbcfcabdf34",
		"name": "Integration Testing",
		"description": "# About this collection\n\nPostman allows you to test your APIs using simple Javascript code. You can evaluate your response body, headers, cookies, and more using the [ChaiJS BDD](https://www.chaijs.com/api/bdd/) syntax.\n\nThis collection guides you through the process of setting up an integration test to ensure that all individual components of an API function together seamlessly.\n\nThe API under test in this collection includes three endpoints for registering and receiving a token, accessing your unique generated name, and unregistering a token:\n\n- POST `/register`\n- POST `/unregister`\n- GET `/my-name`\n    \n\nBy setting up requests in the order of the operation, we can test the flow of data to and from the endpoints and ensure they work together as expected. We also verify that the data persists between requests on the back end.\n\n## **Using this collection**\n\n**Step 1:** Check out the requests' documentation to learn more about -\n\n- what each request is meant to do.\n- the tests we've added against each one.\n    \n\n**Step 2:** Run this collection by clicking on \"Run\".\n\n<img src=\"https://content.pstmn.io/84019b0f-69c8-4c5f-98b9-2c90a6f9a0b1/Y29sbGVjdGlvbi1ydW5uZXItYnV0dG9uLmpwZWc=\" width=\"266\" height=\"103\">\n\n**Step 3:** To customize this collection, replace the request URLs with your API endpoints and add or edit the tests if needed.\n\n## Resources\n\n[Scripting in Postman](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/)\n\n[Test script examples](https://learning.postman.com/docs/writing-scripts/script-references/test-examples/)\n\n[Postman Sandbox API reference](https://learning.postman.com/docs/sending-requests/grpc/postman-sandbox-api/#writing-assertions)\n\n[Using the Collection Runner](https://learning.postman.com/docs/collections/running-collections/intro-to-collection-runs/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34578775"
	},
	"item": [
		{
			"name": "user register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"An access token is returned\", () => {",
							"    pm.expect(pm.response.json()).to.have.property('token')",
							"    pm.expect(pm.response.json().token).to.be.a('string')",
							"    // Set the collection-scope \"token\" variable to the token received from the API",
							"    // This lets us use it in other requests",
							"    pm.collectionVariables.set('token', pm.response.json().token)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\":\"pajar_prihan29\",\n    \"email\":\"fajarprihan29@gmail.com\",\n    \"password\": \"1234\",\n    \"phone\":\"085867273336\"\n\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/api/user/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"user",
						"register"
					]
				},
				"description": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection."
			},
			"response": []
		},
		{
			"name": "restaurant register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "url",
						"value": "http://localhost:8000/api/restaurant/register",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "prihan",
							"type": "text"
						},
						{
							"key": "email",
							"value": "kopikenangan@gmail.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "123456",
							"type": "text"
						},
						{
							"key": "phone",
							"value": "085867274445",
							"type": "text"
						},
						{
							"key": "restaurant_name",
							"value": "Kopi Kenangan",
							"type": "text"
						},
						{
							"key": "restaurant_address",
							"value": "Jalan Gatot Subroto",
							"type": "text"
						},
						{
							"key": "photo",
							"type": "file",
							"src": "/Users/user/Documents/kopikenangan.jpg"
						},
						{
							"key": "latlong",
							"value": "212112121,211214241",
							"type": "text"
						},
						{
							"key": "roles",
							"value": "restaurant",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8000/api/restaurant/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"restaurant",
						"register"
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		},
		{
			"name": "driver register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "url",
						"value": "http://localhost:8000/api/restaurant/register",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "imam",
							"type": "text"
						},
						{
							"key": "email",
							"value": "imam@gmail.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "imam123",
							"type": "text"
						},
						{
							"key": "phone",
							"value": "085867251423",
							"type": "text"
						},
						{
							"key": "restaurant_name",
							"value": "Kopi Kenangan",
							"type": "text",
							"disabled": true
						},
						{
							"key": "restaurant_address",
							"value": "Jalan Gatot Subroto",
							"type": "text",
							"disabled": true
						},
						{
							"key": "photo",
							"type": "file",
							"src": "/Users/user/Documents/bgapp1.jpg"
						},
						{
							"key": "latlong",
							"value": "212112121,211214241",
							"type": "text",
							"disabled": true
						},
						{
							"key": "roles",
							"value": "driver",
							"type": "text"
						},
						{
							"key": "license_plate",
							"value": "B2222FA",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8000/api/driver/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"driver",
						"register"
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "url",
						"value": "http://localhost:8000/api/restaurant/register",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"nasigoreng@gmail.com\",\n    \"password\":\"123456\"\n}"
				},
				"url": {
					"raw": "http://localhost:8000/api/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"login"
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		},
		{
			"name": "logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer 16|oekOFelF5RDegm8cEYhayBbw4kMoEqz9Gh2pOeRz75bb574f",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"nasigoreng@gmail.com\",\n    \"password\":\"ferri123\"\n}"
				},
				"url": {
					"raw": "http://localhost:8000/api/logout",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"logout"
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		},
		{
			"name": "update latlong",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer 18|fUOiihDsbsZ13nFzq3KGHfFVs2JirjHeMGelGhGef46d3155",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"latlong\": \"1231313,1231442\"\n}"
				},
				"url": {
					"raw": "http://localhost:8000/api/user/update-latlong",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"user",
						"update-latlong"
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		},
		{
			"name": "get user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				},
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer 16|oekOFelF5RDegm8cEYhayBbw4kMoEqz9Gh2pOeRz75bb574f",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://localhost:8000/api/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"user"
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		},
		{
			"name": "get all restaurant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				},
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer 15|1bsaZeMYptBoVjnjYdylYKpfCTbFaoesTHvaUMzr434275a9",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8000/api/restaurant",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"restaurant"
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		},
		{
			"name": "create product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer 19|yNLWR1mlNvS3j3YnsrMgien7nXhQpOXMMP9Jbl8fc5b4bc33",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "nasi goreng",
							"type": "text"
						},
						{
							"key": "description",
							"value": "nasi goreng siap santap",
							"type": "text"
						},
						{
							"key": "price",
							"value": "15000",
							"type": "text"
						},
						{
							"key": "stock",
							"value": "100",
							"type": "text"
						},
						{
							"key": "is_available",
							"value": "1",
							"type": "text"
						},
						{
							"key": "is_favorite",
							"value": "0",
							"type": "text"
						},
						{
							"key": "image",
							"type": "file",
							"src": "/Users/user/Documents/nasigoreng.jpg"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8000/api/products",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"products"
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		},
		{
			"name": "get all product by restaurant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				},
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer 19|yNLWR1mlNvS3j3YnsrMgien7nXhQpOXMMP9Jbl8fc5b4bc33",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "nasi goreng",
							"type": "text"
						},
						{
							"key": "description",
							"value": "nasi goreng siap santap",
							"type": "text"
						},
						{
							"key": "price",
							"value": "15000",
							"type": "text"
						},
						{
							"key": "stock",
							"value": "100",
							"type": "text"
						},
						{
							"key": "is_available",
							"value": "1",
							"type": "text"
						},
						{
							"key": "is_favorite",
							"value": "0",
							"type": "text"
						},
						{
							"key": "image",
							"type": "file",
							"src": "/Users/user/Documents/nasigoreng.jpg"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8000/api/products",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"products"
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		},
		{
			"name": "update product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer 19|yNLWR1mlNvS3j3YnsrMgien7nXhQpOXMMP9Jbl8fc5b4bc33",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"nasi goreng level 1\",\n    \"description\": \"nasi goreng pedes\",\n    \"price\": 18000,\n    \"stock\": 40,\n    \"is_available\": \"1\",\n    \"is_favorite\": \"0\"\n}"
				},
				"url": {
					"raw": "http://localhost:8000/api/products/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"products",
						"1"
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		},
		{
			"name": "delete product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer 19|yNLWR1mlNvS3j3YnsrMgien7nXhQpOXMMP9Jbl8fc5b4bc33",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"nasi goreng level 1\",\n    \"description\": \"nasi goreng pedes\",\n    \"price\": 18000,\n    \"stock\": 40,\n    \"is_available\": \"1\",\n    \"is_favorite\": \"0\"\n}"
				},
				"url": {
					"raw": "http://localhost:8000/api/products/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"products",
						"3"
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		},
		{
			"name": "get order by status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				},
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer 27|BAOjSYXkrbwYWI0MtdyDJMh6baSLvx6q1fTKRksy0fb10b30",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\" : \"pending\"\n}"
				},
				"url": {
					"raw": "http://localhost:8000/api/order/restaurant",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"order",
						"restaurant"
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		},
		{
			"name": "create order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer 19|yNLWR1mlNvS3j3YnsrMgien7nXhQpOXMMP9Jbl8fc5b4bc33",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"restaurant_id\":11,\n    \"shipping_cost\":10000,\n    \"order_items\":[\n        {\n            \"product_id\":2,\n            \"quantity\":2\n        }\n    ]\n}"
				},
				"url": {
					"raw": "http://localhost:8000/api/order",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"order"
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		},
		{
			"name": "update order status by restaurant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer 15|1bsaZeMYptBoVjnjYdylYKpfCTbFaoesTHvaUMzr434275a9",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\" : \"ready_for_delivey\"\n}"
				},
				"url": {
					"raw": "http://localhost:8000/api/order/restaurant/update-status/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"order",
						"restaurant",
						"update-status",
						"1"
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		},
		{
			"name": "get order by status driver",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				},
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer 25|kDwkBTtlmWr2p9RDYE1lJqA1RbcEA6bceSWsdp1Lc8dc3682",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\" : \"pending\"\n}"
				},
				"url": {
					"raw": "http://localhost:8000/api/order/driver",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"order",
						"driver"
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		},
		{
			"name": "update order status driver",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer 25|kDwkBTtlmWr2p9RDYE1lJqA1RbcEA6bceSWsdp1Lc8dc3682",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\" : \"delivered\"\n}"
				},
				"url": {
					"raw": "http://localhost:8000/api/order/driver/update-status/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"order",
						"driver",
						"update-status",
						"2"
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		},
		{
			"name": "get order history",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				},
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer 26|ET6MKByPuK8CqDZYN3mBZoijjfuS9HtnEpzp7Ohp10f418b7",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\" : \"processing\"\n}"
				},
				"url": {
					"raw": "http://localhost:8000/api/order/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"order",
						"user"
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		},
		{
			"name": "update purchase status by user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer 15|1bsaZeMYptBoVjnjYdylYKpfCTbFaoesTHvaUMzr434275a9",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\":\"processing\"\n}"
				},
				"url": {
					"raw": "http://localhost:8000/api/order/user/update-status/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"api",
						"order",
						"user",
						"update-status",
						"3"
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": "https://postman-integration-testing.glitch.me/"
		}
	]
}